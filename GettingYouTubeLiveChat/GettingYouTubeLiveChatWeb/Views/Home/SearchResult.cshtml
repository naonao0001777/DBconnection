@model WebApplication1.Models.LiveChatModelList

@{
    ViewBag.Title = "SearchResult";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />

    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Potta+One&display=swap" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

    <style type="text/css">
        .loading {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background: rgba(0,0,0,.5);
            background-image: url('https://user-images.githubusercontent.com/46675984/123852276-14d7c800-d957-11eb-88f4-515d290b6597.gif');
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center center;
            background-size: 100px 100px;
            z-index: 9999;
        }
    </style>
</head>
<body>
    <br /><br /><br />
    <div class="center-block font-google">
        <center>
            <h1 style="font-size:70px">YouTubeのコメントを取得する</h1>
        </center>
    </div>
    <br><br><br><br>
    <div>
        <span>テーブルを検索</span>
    </div>
    <div>
        <span>
            <input type="text" id="searchTxt" placeholder="キーワード入力" />
        </span>
        <span>
            <input type="button" id="searchUser" value="ユーザー検索" />
        </span>
        @*<span>
            <input type="button" id="searchParentChild" value="返信ユーザーごと検索" />
        </span>*@
        <span>
            <input type="button" id="searchComment" value="コメント検索" />
        </span>
        <span>
            <input type="button" id="clear" value="クリア" />
        </span>
    </div>
    <div class="table-responsive">
        <table border="1" class="table table-striped table-condensed" id="table">
            <thead>
                <tr class="bg-primary">
                    <th>#No.</th>
                    <th>ユーザ名</th>
                    <th>いいね数</th>
                    <th>コメント</th>
                </tr>
            </thead>
            @try
            {
                if (Model.ChatList != null)
                {
                    for (int i = 0; i < Model.ChatList.Count(); i++)
                    {
                        int count = i + 1;
                        <tbody>
                            <tr>
                                <td>
                                    @Html.DisplayFor(model => count)
                                </td>
                                <td class="userThumbnail">
                                    @if (Model.ChatList[i].IsChild)
                                    {
                                        <p id="commentId" style="display:none">@Model.ChatList[i].ParentId</p>
                                        @:→
                                        <a href="@Html.DisplayFor(model => Model.ChatList[i].ChannelUrl)" target="_blank" rel="noopener noreferrer"><img src="@Html.DisplayFor(model => Model.ChatList[i].ProfileImageUrl)" width="30" height="30" alt="Usersthumbnail"></a>
                                        @Html.DisplayFor(model => Model.ChatList[i].DspName)
                                    }
                                    else
                                    {
                                        <p id="commentId" style="display:none">@Model.ChatList[i].Id</p>
                                        <a href="@Html.DisplayFor(model => Model.ChatList[i].ChannelUrl)" target="_blank" rel="noopener noreferrer"><img src="@Html.DisplayFor(model => Model.ChatList[i].ProfileImageUrl)" width="30" height="30" alt="Usersthumbnail"></a>
                                        @Html.DisplayFor(model => Model.ChatList[i].DspName)
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.ChatList[i].LikeCount)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => Model.ChatList[i].DspMessage)
                                </td>
                            </tr>
                        </tbody>
                    }
                }
            }
            catch (Exception e)
            {
                Console.Write(e.Message);
            }


        </table>
    </div>
    <div class="loading hide"></div>
</body>
</html>
<script type="text/javascript">
    // ローディング
    $(function () {
        $('#reSearchBtn').on('click', function () {
            $.ajax({
                url: '../../Controller/HomeController.cs',
                type: 'POST',
                beforeSend: function () {
                    $('.loading').removeClass('hide');
                }
            }).done(function () {
                $('.loading').addClass('hide');
            })
        })
    })
    // テーブル内を検索する
    $(function () {
        $('#searchUser').bind('click', function () {
            var re = new RegExp($('#searchTxt').val());
            $('#table tbody tr').each(function () {
                var txt = $(this).find("td:eq(1)").text();
                if (txt.match(re) != null) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            })
        })

        //$('#searchParentChild').bind('click', function () {
        //    var re = new RegExp($('#searchTxt').val());
        //    var commentid = new RegExp($('#commentid').val());
        //    $('#table tbody tr').each(function () {
        //        var txt = $(this).find("td:eq(1)").text;
        //        if (txt.match(re) != null || id.match(commentid) != null) {
        //            $(this).show();
        //        } else {
        //            $(this).hide();
        //        }
        //    })
        //})

        $('#searchComment').bind('click', function () {
            var re = new RegExp($('#searchTxt').val());
            $('#table tbody tr').each(function () {
                var txt = $(this).find("td:eq(3)").text();
                if (txt.match(re) != null) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            })
        })

        $('#clear').bind('click', function () {
            $('#table tbody tr').each(function () {
                $(this).show();
            })
        })
    })

    $(function () {
        $('#clear').click(function () {
            $(document).find('#searchTxt').val('');
        });
    });
    //// デフォルトの設定を変更
    //$.extend($.fn.dataTable.defaults, {
    //    language: {
    //        url: "http://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Japanese.json"
    //    }
    //});
    //// ソート
    //$('#table').DataTable({
    //    lengthChange: false,
    //    info: false
    //});
</script>
